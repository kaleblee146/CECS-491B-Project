files:
  "/tmp/update_settings.py":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env python3
      import os

      # Path to settings.py
      settings_path = "/var/app/current/backend/settings.py"

      # Check if file exists
      if os.path.exists(settings_path):
          with open(settings_path, 'r') as file:
              settings_content = file.read()

          # Make SSL redirect conditional based on environment variable
          if "SECURE_SSL_REDIRECT = True" in settings_content:
              settings_content = settings_content.replace(
                  "SECURE_SSL_REDIRECT = True",
                  "SECURE_SSL_REDIRECT = os.environ.get('SECURE_SSL_REDIRECT', 'True').lower() == 'true'"
              )

          # Add EB domain to allowed hosts
          if "green-env-usw1.us-west-1.elasticbeanstalk.com" not in settings_content:
              settings_content = settings_content.replace(
                  "ALLOWED_HOSTS = [",
                  "ALLOWED_HOSTS = [\n    \"green-env-usw1.us-west-1.elasticbeanstalk.com\","
              )

          # Add EB domain to CSRF trusted origins
          if "\"https://green-env-usw1.us-west-1.elasticbeanstalk.com\"," not in settings_content:
              settings_content = settings_content.replace(
                  "CSRF_TRUSTED_ORIGINS = [",
                  "CSRF_TRUSTED_ORIGINS = [\n    \"https://green-env-usw1.us-west-1.elasticbeanstalk.com\",\n    \"http://green-env-usw1.us-west-1.elasticbeanstalk.com\","
              )

          # Save the updated settings
          with open(settings_path, 'w') as file:
              file.write(settings_content)

container_commands:
  01_update_settings:
    command: "/tmp/update_settings.py"
    leader_only: true